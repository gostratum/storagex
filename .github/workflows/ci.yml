name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      minio:
        image: minio/minio:latest
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        ports:
          - 9000:9000
        options: >-
          --health-cmd "curl -f http://localhost:9000/minio/health/live || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    env:
      # MinIO configuration for tests
      STORAGEX_PROVIDER: s3
      STORAGEX_BUCKET: test-bucket
      STORAGEX_REGION: us-east-1
      STORAGEX_ENDPOINT: http://localhost:9000
      STORAGEX_ACCESS_KEY: minioadmin
      STORAGEX_SECRET_KEY: minioadmin
      STORAGEX_USE_PATH_STYLE: true
      STORAGEX_DISABLE_SSL: true
      STORAGEX_ENABLE_LOGGING: false
      GO_VERSION: '1.21'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run go vet
      run: go vet ./...

    - name: Wait for MinIO to be ready
      run: |
        echo "Waiting for MinIO to be ready..."
        timeout 30s bash -c '
        until curl -f http://localhost:9000/minio/health/live; do
          echo "Waiting for MinIO..."
          sleep 2
        done'
        echo "MinIO is ready!"

    - name: Create test bucket
      run: |
        # Install MinIO client
        curl -fsSL https://dl.min.io/client/mc/release/linux-amd64/mc -o mc
        chmod +x mc
        
        # Configure MinIO client
        ./mc alias set minio http://localhost:9000 minioadmin minioadmin
        
        # Create test bucket
        ./mc mb minio/test-bucket || true
        
        # Verify bucket exists
        ./mc ls minio/

    - name: Build
      run: go build -v ./...

    - name: Run tests
      run: go test -v -race ./...
        
    - name: Test example
      timeout-minutes: 1
      run: |
        go run examples/basic/main.go || echo "Expected failure - no config provided"

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m

  build-matrix:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: ['1.21', '1.22']
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Build
      run: go build -v ./...
    
    - name: Test (unit tests only)
      run: go test -v -short ./...